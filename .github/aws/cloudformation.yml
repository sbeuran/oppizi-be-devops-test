AWSTemplateFormatVersion: '2010-09-09'
Description: 'Task Management API Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues: [prod, dev]
  DBUsername:
    Type: String
    NoEcho: true
  DBPassword:
    Type: String
    NoEcho: true
  DBName:
    Type: String

Resources:
  # IAM Roles with unique names and timestamps to avoid conflicts
  TaskRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: !Sub ${AWS::StackName}-TaskRole-${AWS::Region}-${AWS::AccountId}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  ExecutionRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      RoleName: !Sub ${AWS::StackName}-ExecRole-${AWS::Region}-${AWS::AccountId}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: '*'

  # Network Resources with unique names
  VPC:
    Type: AWS::EC2::VPC
    DeletionPolicy: Retain
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-vpc-${AWS::Region}

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DeletionPolicy: Retain
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-igw-${AWS::Region}

  # Log Group with unique name
  LogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}-${Environment}
      RetentionInDays: 7

  # ECS Cluster with unique name
  TaskManagementCluster:
    Type: AWS::ECS::Cluster
    DeletionPolicy: Retain
    Properties:
      ClusterName: !Sub ${AWS::StackName}-${Environment}-${AWS::Region}

Outputs:
  ClusterName:
    Description: ECS Cluster Name
    Value: !Ref TaskManagementCluster
  ExecutionRoleArn:
    Description: ECS Task Execution Role ARN
    Value: !GetAtt ExecutionRole.Arn
  TaskRoleArn:
    Description: ECS Task Role ARN
    Value: !GetAtt TaskRole.Arn
  VpcId:
    Description: VPC ID
    Value: !Ref VPC