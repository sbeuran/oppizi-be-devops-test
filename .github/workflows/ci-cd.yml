name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: task_management
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Create task-management-api directory
        run: |
          mkdir -p task-management-api
          shopt -s dotglob nullglob
          cp -r [!.]* task-management-api/ || true
          cp -r .[!.]* task-management-api/ || true
          rm -rf task-management-api/task-management-api || true
          
      - name: Install dependencies
        working-directory: ./task-management-api
        run: npm ci
        
      - name: Run tests
        working-directory: ./task-management-api
        run: npm test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: task_management

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Create task-management-api directory
        run: |
          mkdir -p task-management-api
          cp -r ./* task-management-api/ || true
          cp -r ./.* task-management-api/ || true
          rm -rf task-management-api/task-management-api || true
          
      - name: Deploy to AWS
        working-directory: ./task-management-api
        run: |
          aws cloudformation deploy \
            --template-file .github/aws/cloudformation.yml \
            --stack-name task-management-api \
            --parameter-overrides Environment=dev \
            --capabilities CAPABILITY_IAM 